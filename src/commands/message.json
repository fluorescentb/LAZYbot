{
    "Administration": [
        {
            "aliases": [
                "settings"
            ],
            "description": "Displays server settings on the bot.",
            "usage": [
                "settings roles"
            ],
            "module": "Administration",
            "file": "set",
            "method": "generate",
            "prefix": "generic",
            "requires": {
                "role": "admin"
            }
        },
        {
            "aliases": [
                "set"
            ],
            "description": "Sets a server settings.",
            "usage": [
                "settings roles bot"
            ],
            "module": "Administration",
            "file": "set",
            "method": "set",
            "prefix": "generic",
            "requires": {
                "role": "admin"
            }
        },
        {
            "aliases": [
                "setusername"
            ],
            "description": "Sets bot client's username to a the single argument given.",
            "usage": [
                "setusername LAZYbot"
            ],
            "module": "Administration",
            "file": "set",
            "method": "username",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        },
        {
            "aliases": [
                "fakeban",
                "bann"
            ],
            "description": "A fake ban. You're not really banned. Jokes.",
            "usage": [
                "fb DragonMateZ"
            ],
            "module": "Administration",
            "file": "ban",
            "method": "fake",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "role": "admin"
            }
        },
        {
            "aliases": [
                "ban"
            ],
            "description": "Bans a user. Only to be used in extrenuating circumstances. First argument given is the user. Second, if provided is the number of days for which to delete their messages. Anything else is given as the reason for the ban.",
            "usage": [
                "ban pigeons",
                "ban TrumpMAGA2020 7 Spamming inappropriately."
            ],
            "module": "Administration",
            "file": "ban",
            "method": "real",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "role": "admin"
            }
        },
        {
            "aliases": [
                "shadowban",
                "sb",
                "shadowbanadd",
                "sbadd"
            ],
            "description": "Adds a new shadowban criteria. Only to be used in extrenuating circumstances.",
            "usage": [
                "sb user"
            ],
            "module": "Administration",
            "file": "shadowban",
            "method": "adder",
            "subcommands": [
                {
                    "aliases": [
                        "user"
                    ],
                    "description": "Adds a specific user to the shadowban list.",
                    "method": "user",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "username"
                    ],
                    "description": "Adds a new regex to ban new users upon arrival.",
                    "method": "username",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "newMessage"
                    ],
                    "description": "Adds a new regex to vet messages from new users.",
                    "method": "newMessage",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "role": "admin"
            },
            "syntax": [
                "condition"
            ]
        },
        {
            "aliases": [
                "shadowbanlist",
                "sbl",
                "sblist"
            ],
            "description": "Lists the new shadowban criteria.",
            "usage": [
                "sbl"
            ],
            "module": "Administration",
            "file": "shadowban",
            "method": "list",
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "shadowbanremove",
                "sbrem"
            ],
            "description": "Brings up a dialogue to removes shadowban criteria.",
            "usage": [
                "sbrem"
            ],
            "module": "Administration",
            "file": "shadowban",
            "method": "remove",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "role": "admin"
            }
        },
        {
            "aliases": [
                "eval"
            ],
            "description": "Use to evaluated javascript code. Bot owner only, for obvious reasons.",
            "usage": [
                "eval ```js this.channel.send(Date.now())```"
            ],
            "module": "Administration",
            "file": "eval",
            "method": "run",
            "arguments": [
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        },
        {
            "aliases": [
                "call"
            ],
            "description": "Use to call a given function inside a module.",
            "usage": [
                "call Puzzle.variant()"
            ],
            "module": "Administration",
            "file": "eval",
            "method": "call",
            "arguments": [
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        },
        {
            "aliases": [
                "upversion"
            ],
            "description": "Increases the semantic version count of the bot in package.json and in the nickname. Give argument `big` to increase Y count, `huge` to increase X count.",
            "usage": [
                "upversion",
                "upversion big",
                "upversion huge"
            ],
            "module": "Administration",
            "file": "set",
            "method": "upversion",
            "arguments": [
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        },
        {
            "aliases": [
                "downversion"
            ],
            "description": "Decreases the semantic version count of the bot in package.json and in the nickname. Give argument `big` to decrease Y count, `huge` to decrease X count.",
            "usage": [
                "downversion",
                "downversion big",
                "downversion huge"
            ],
            "module": "Administration",
            "file": "set",
            "method": "downversion",
            "arguments": [
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        },
        {
            "aliases": [
                "version"
            ],
            "description": "Sets the semantic version of LAZYbot to a custom specified value. Leave empty to return current value.",
            "usage": [
                "version",
                "version 1.5.2"
            ],
            "module": "Administration",
            "file": "set",
            "method": "version",
            "prefix": "generic",
            "requires": {
                "args": [0, 1]
            }
        },
        {
            "aliases": [
                "backup"
            ],
            "description": "Backs up the database to a given file.",
            "usage": [
                "backup",
                "backup 1",
                "backup 2",
                "backup 3"
            ],
            "module": "Administration",
            "file": "backup",
            "method": "force",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        },
        {
            "aliases": [
                "restore"
            ],
            "description": "Restores the database from a given file.",
            "usage": [
                "restore"
            ],
            "module": "Administration",
            "file": "backup",
            "method": "force",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        }
	],
	"Builders": [
		{
			"aliases": [
				"new"
			],
			"description": "Creates a new builder",
			"module": "Builders",
			"file": "main",
			"method": "run",
			"syntax": "type",
			"prefix": "generic",
			"subcommands": [
				{
					"aliases": [
						"embed"
					],
					"description": "Builds a new embed in the specified channel",
					"method": "embed"
				}
			]
		},
		{
			"aliases": [
				"edit"
			],
			"description": "Creates a new builder by editing a previous message of LAZYbot's",
			"module": "Builders",
			"file": "main",
			"method": "run",
			"syntax": "type",
			"prefix": "generic",
			"subcommands": [
				{
					"aliases": [
						"embed"
					],
					"description": "Edits a new embed in the specified channel",
					"method": "embed"
				}
			]
		},
		{
			"aliases": [
				"setTitle"
			],
			"description": "Sets the title of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"setDescription"
			],
			"description": "Sets the description of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"setAuthor"
			],
			"description": "Sets the author of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"setThumbnail"
			],
			"description": "Sets the thumbnail of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"setImage"
			],
			"description": "Sets the image of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"setFooter"
			],
			"description": "Sets the footer of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"setContent"
			],
			"description": "Sets the content of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"setColor"
			],
			"description": "Sets the colour of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"setURL"
			],
			"description": "Sets the URL of an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "set",
			"prefix": "generic"
		},
		{
			"aliases": [
				"addField"
			],
			"description": "Adds a field to an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "addField",
			"prefix": "generic"
		},
		{
			"aliases": [
				"removeField"
			],
			"description": "Removes a field to an active embed",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "removeField",
			"prefix": "generic"
		},
		{
			"aliases": [
				"publish"
			],
			"description": "Locks an embed preventing further changes",
			"module": "Builders",
			"file": "embedBuilder",
			"method": "publish",
			"prefix": "generic"
		}
	],
    "Calculation": [
        {
            "aliases": [
                "UStoDecimal",
                "toDec",
                "toDecimal"
            ],
            "description": "Takes betting odds in the form of US numbers and converts them to Decimal odds.",
            "usage": [
                "UStoDecimal -160"
            ],
            "module": "Calculation",
            "file": "calc",
            "method": "todecimal",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": 1
                }
            }
        },
        {
            "aliases": [
                "DecimaltoUS",
                "toUS"
            ],
            "description": "Takes betting odds in the form of decimal numbers and converts them to the American odds system.",
            "usage": [
                "DecimaltoUS 1.7"
            ],
            "module": "Calculation",
            "file": "calc",
            "method": "tous",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": 1
                }
            }
        },
        {
            "aliases": [
                "tournamentformula",
                "tf"
            ],
            "description": "Gets the reward currency for hosting a tournament. Requires three arguments of [games played in that tournament], [time control], [increment].",
            "usage": [
                "tournamentformula 620 0.5 0",
                "tf 84 3 1"
            ],
            "module": "Calculation",
            "file": "calc",
            "method": "tf",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": 3
                }
            }
        },
        {
            "aliases": [
                "odds"
            ],
            "description": "Begins process to generate a given type of odds. Please specify type requested.",
            "subcommands": [
                {
                    "aliases": [
                        "series"
                    ],
                    "description": "A fixed number of games between two players.",
                    "method": "series",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "match"
                    ],
                    "description": "A set that ends when one player reaches a certain score (ex: first to 10).",
                    "method": "match",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "arena"
                    ],
                    "description": "A tournament for which there are no fixed 'rounds'.",
                    "method": "arena",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "usage": [
                "odds series",
                "odds match",
                "odds arena"
            ],
            "module": "Calculation",
            "file": "odds",
            "method": "run",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": [
                        1
                    ]
                }
            },
            "syntax": [
                "type"
            ]
        },
        {
            "aliases": [
                "calculate",
                "calc"
            ],
            "description": "Performs operation listed in the [Math object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math).\nPlease use format `operation(arguments)`, or it will not register.\nCustom operations listed below.",
            "usage": [
                "calc choose(10, 3)",
                "calc binomial(10, 0.75, 6)",
                "calc negativebinomial(21, 0.6, 40, false)",
                "calc permutations(6, 4)"
            ],
            "module": "Calculation",
            "file": "maths",
            "method": "run",
            "arguments": [
                "argument"
            ],
            "prefix": "generic"
        }
    ],
    "Chess": [
		{
			"aliases": [
				"verify",
				"lichessverify"
			],
			"description": "Begins the process to use an OAuth2 grant to link the identity of a Discord profile with a Lichess profile",
			"module": "Chess",
			"file": "auth",
			"method": "verifyReq",
			"prefix": "generic"
		},
        {
            "aliases": [
                "puzzleadd"
            ],
            "description": "Adds a new puzzle to be presented formally to the channel and added to a temporary db of puzzles.",
            "usage": [
                "puzzleadd https://lichess.org/@/puzzlename.jpg",
                "puzzleadd [with image attached]"
            ],
            "module": "Chess",
            "file": "puzzle",
            "method": "add",
            "arguments": [
                "message",
                "argument"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "puzzles"
            ],
            "description": "View currently active puzzles. Puzzles stay active for a maximum of 12 hours or until they are closed by the author.",
            "usage": [
                "puzzles"
            ],
            "module": "Chess",
            "file": "puzzle",
            "method": "view",
            "prefix": "generic"
        },
        {
            "aliases": [
                "getpuzzle"
            ],
            "description": "Fetches an active puzzle by its index. If no arguments provided, displays all puzzles and awaits index input.",
            "usage": [
                "getpuzzle",
                "getpuzzle 1"
            ],
            "module": "Chess",
            "file": "puzzle",
            "method": "view",
            "prefix": "generic"
        },
        {
            "aliases": [
                "daily"
            ],
            "description": "Posts the daily puzzle from lichess. **BETA**",
            "usage": [
                "daily"
            ],
            "module": "Chess",
            "file": "puzzle",
            "method": "daily",
            "prefix": "generic"
        },
        {
            "aliases": [
                "puzzle"
            ],
            "description": "Posts a random variant puzzle depending on the channel or arguments specified.",
            "usage": [
                "puzzle"
            ],
            "module": "Chess",
            "file": "puzzle",
            "method": "variant",
            "prefix": "generic"
        },
        {
            "aliases": [
                "puzzleclose"
            ],
            "description": "Closes an active puzzle by index. Only possible if you created the puzzle.",
            "usage": [
                "puzzleclose 1"
            ],
            "module": "Chess",
            "file": "puzzle",
            "method": "view",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "args": 1
            }
        },
        {
            "aliases": [
                "leaderboard",
                "lb"
            ],
            "description": "Posts the leaderboard for House Members of that variant on a given source. Based on linked accounts through the `${generic}lichess` and `${generic}chesscom` commands.",
            "usage": [
                "lb",
                "lb zh chesscom",
                "lb bug"
            ],
            "module": "Chess",
            "file": "leaderboard",
            "method": "variant",
            "arguments": [
                "channel",
                "args"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "fen"
            ],
            "description": "Renders a position from an fen string.",
            "usage": [
                "fen 8/p7/7p/1k3pp1/1P2pP2/2K1P1PP/8/8 w - - 0 41",
                "fen r1b2rk1/ppppBp1p/7p/8/4Q3/P1q5/P1P1KPPP/R4B1R/NPBnnppn b - - 37 19",
                "fen 5r2/pp2Q1pk/4pr1p/5p1P/3N1P2/2P1q1PK/PP6/3R4 w - - 0 1 +0+1"
            ],
            "module": "Chess",
            "file": "fen",
            "method": "run",
            "prefix": "generic"
        },
        {
            "aliases": [
                "lichess"
            ],
            "description": "Links your Discord user profile to a lichess account.",
            "usage": [
                "lichess littleplotkin"
            ],
            "module": "Chess",
            "file": "tracker",
            "method": "run",
            "prefix": "generic"
        },
        {
            "aliases": [
                "chesscom",
                "chess.com"
            ],
            "description": "Links your Discord user profile to a Chess.com account.",
            "usage": [
                "chesscom schoolmeester"
            ],
            "module": "Chess",
            "file": "tracker",
            "method": "run",
            "prefix": "generic"
        },
        {
            "aliases": [
                "bughousetest",
                "bht"
            ],
            "description": "Links your Discord user profile to a bughousetest.com account.",
            "usage": [
                "bughousetest thepinky"
            ],
            "module": "Chess",
            "file": "tracker",
            "method": "run",
            "prefix": "generic"
        },
        {
            "aliases": [
                "remove"
            ],
            "description": "Creates a dialogue that allows a user to pick an account linked to their discord account and unlink it.",
            "usage": [],
            "module": "Chess",
            "file": "tracker",
            "method": "remove",
            "prefix": "generic"
        },
        {
            "aliases": [
                "update"
            ],
            "description": "Updates a user on all their accounts.",
            "usage": [
                "update theLAZYmd"
            ],
            "module": "Chess",
            "file": "tracker",
            "method": "update",
            "prefix": "generic"
        },
        {
            "aliases": [
                "superupdate",                
                "updateall"
            ],
            "description": "Updates all users from Lichess.",
            "module": "Chess",
            "file": "tracker",
            "method": "updateAll",
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        },
        {
            "aliases": [
                "myrank",
                "rank"
            ],
            "description": "Gets the rank of a user across all leaderboards. Default is yourself.",
            "usage": [
                "myrank DragonMateZ"
            ],
            "module": "Chess",
            "file": "rank",
            "method": "variant",
            "prefix": "generic"
		},
		{
			"aliases": [
				"tournament",
				"tourn"
			],
			"description": "Gets a leaderboard of results in a tournament on Lichess and filters them to players from the database",
			"usage": [
				"results OQIEzLzG",
				"res SHEUqsbY"
			],
			"module": "Chess",
			"file": "leaderboard",
			"method": "tournament",
			"prefix": "generic"
		},
		{
			"aliases": [
				"shield"
			],
			"description": "Gets a leaderboard of results for a shield tournament on Lichess and filters them to players from the database",
			"usage": [
				"shield Crazyhouse 30",
				"shield antichess 50",
				"shield [defaults to Bullet] [defauls to 30]"
			],
			"module": "Chess",
			"file": "leaderboard",
			"method": "shield",
			"prefix": "generic"
		}
    ],
    "Currency": [
        {
            "aliases": [
                "award"
            ],
            "description": "Awards currency through the Nadeko bot. Bot owner only!",
            "usage": [
                "award 100 Kyle"
            ],
            "module": "Currency",
            "file": "currency",
            "method": "on",
            "arguments": [
                "channel"
            ],
            "prefix": "nadeko",
            "requires": {
                "house": true,
                "response": "bouncer",
                "args": {
                    "length": [
                        2,
                        "++"
                    ]
                }
            }
        },
        {
            "aliases": [
                "take"
            ],
            "description": "Takes currency through the Nadeko bot. Bot owner only!",
            "usage": [
                "take 100 littleplotkin"
            ],
            "module": "Currency",
            "file": "currency",
            "method": "on",
            "arguments": [
                "channel"
            ],
            "prefix": "nadeko",
            "requires": {
                "house": true,
                "response": "bouncer",
                "args": {
                    "length": [
                        2,
                        "++"
                    ]
                }
            }
        },
        {
            "aliases": [
                "timely"
            ],
            "description": "Use to claim your 'timely' currency. Bot owner has to specify the amount and the period on how often you can claim your currency.",
            "usage": [
                "timely"
            ],
            "module": "Currency",
            "file": "currency",
            "method": "timely",
            "prefix": "nadeko",
            "requires": {
                "house": true,
                "state": "tm",
                "channels": [
                    "bot"
                ],
                "response": "^bouncer",
                "args": {
                    "length": 0
                }
            }
        },
        {
            "aliases": [
                "gild"
            ],
            "description": "Gilds a given message, or if name provided, their last in the channel.\nCosts 1 🌸 to use.",
            "usage": [
                "gild fumitoks",
                "gild 481994356106985493"
            ],
            "module": "Currency",
            "file": "emoji",
            "method": "gild",
            "arguments": [
                "args"
            ],
            "prefix": "generic"
        }
    ],
    "Custom Reactions": [
        {
            "aliases": [
                "listcustreact",
                "lcr",
                "listcustomreaction"
            ],
            "description": "List custom reactons for the server.",
            "usage": [],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "list",
            "prefix": "generic"
        },
        {
            "aliases": [
                "listemoreact",
                "ler",
                "listemojireaction"
            ],
            "description": "List emoji reactons for the server.",
            "usage": [],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "list",
            "prefix": "generic"
        },
        {
            "aliases": [
                "addcustreact",
                "acr",
                "addcustomreaction"
            ],
            "description": "Addes add a new text custom reaction to react to keywords in new messages.",
            "usage": [
                "acr marco? polo!",
                "acr party :tada:"
            ],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "add",
            "arguments": [
                "args",
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "editcustreact",
                "ecr",
                "editcustomreaction"
            ],
            "description": "Edits an existing text custom reaction.",
            "usage": [
                "ecr party It's party time!"
            ],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "edit",
            "arguments": [
                "args",
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "togcustreact",
                "tcr",
                "togglecustomreaction"
            ],
            "description": "Toggles whether an existing text reaction is triggered from a keyword anywhere in the message.",
            "usage": [
                "tcr party"
            ],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "toggle",
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "delcustreact",
                "dcr",
                "deletecustomreaction"
            ],
            "description": "Deletes a emssage reaction.",
            "usage": [
                "dcr no"
            ],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "delete",
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "addemoreact",
                "aer",
                "addemojireaction"
            ],
            "description": "Addes add a new emoji to react to messages containing keywords.",
            "usage": [
                "aer lazy lazy"
            ],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "add",
            "arguments": [
                "args",
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "editemoreact",
                "eer",
                "editemojireaction"
            ],
            "description": "Edits an existing emoji custom reaction.",
            "usage": [
                "ecr cri lul"
            ],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "edit",
            "arguments": [
                "args",
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "togemoreact",
                "ter",
                "toggleemojireaction"
            ],
            "description": "Toggles whether an existing emoji reaction is triggered from a keyword anywhere in the message.",
            "usage": [
                "ter party"
            ],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "toggle",
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "delemoreact",
                "der",
                "deleteemojireaction"
            ],
            "description": "Deletes an emoji reaction.",
            "usage": [
                "der obi"
            ],
            "module": "Custom Reactions",
            "file": "customreactions",
            "method": "delete",
            "prefix": "generic",
            "requires": {
                "role": [
                    "admin",
                    "mod"
                ]
            }
        },
        {
            "aliases": [
                "emoji"
            ],
            "description": "Reacts to your message with all emoji listed in the message as separate words.",
            "usage": [
                "emoji lichess",
                "emoji ✅ ❎"
            ],
            "module": "Custom Reactions",
            "file": "emoji",
            "method": "emoji",
            "arguments": [
                "args"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "react"
            ],
            "description": "Reacts to a given message, or if name provided, their last in the channel, with all emoji listed in the message as separate words.\nCan use animated emoji.\nFirst argument must be message ID or user.",
            "usage": [
                "react ijh hyperpoggers",
                "react 482013403595014155 lichess chesscom bughousetest"
            ],
            "module": "Custom Reactions",
            "file": "emoji",
            "method": "react",
            "arguments": [
                "args"
            ],
            "prefix": "generic"
        }
    ],
    "Election": [
        {
            "aliases": [
                "election"
            ],
            "description": "Displays current election data. Use action to configure the election.",
            "subcommands": [
                {
                    "aliases": [
                        "status"
                    ],
                    "description": "Shows the status of an upcoming election on the server. Same as `!election`.",
                    "method": "status",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "initiate"
                    ],
                    "description": "Readies a server for a new election, using default settings.",
                    "method": "initiate",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "config"
                    ],
                    "description": "Changes the settings for an upcoming election, resetting any previous voting data and registered voters.",
                    "method": "config",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "reset"
                    ],
                    "description": "Sets election config data to the default.",
                    "method": "reset",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "clear"
                    ],
                    "description": "Resets previous voting data.",
                    "method": "clear",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "usage": [],
            "module": "Election",
            "file": "election",
            "method": "run",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "syntax": [
                "action"
            ]
        },
        {
            "aliases": [
                "voters"
            ],
            "description": "Performs an action on the voters register for an upcoming election on the server. Leave blank to display list of voters and elections.",
            "subcommands": [
                {
                    "aliases": [
                        "register"
                    ],
                    "description": "Registers voters ready for a new election. Resets previous voting data.",
                    "method": "register",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "deregister"
                    ],
                    "description": "Deletes voting data. Leave blank to run function for all.",
                    "method": "deregister",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "disqualify"
                    ],
                    "description": "Removes a voter from all election records.",
                    "method": "disqualify",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "get"
                    ],
                    "description": "Gets the list of eligble voters for a channel. To be used in #spam only.",
                    "method": "get",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "usage": [],
            "module": "Election",
            "file": "voters",
            "method": "run",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "syntax": [
                "action"
            ]
        },
        {
            "aliases": [
                "eligible"
            ],
            "description": "Lists the ballots for which a user is eligible to vote. Defaults to self.",
            "usage": [
                "eligible hauptschule"
            ],
            "module": "Election",
            "file": "voters",
            "method": "eligible",
            "arguments": [
                "argument"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "candidates"
            ],
            "description": "Displays the list of candidates for an upcoming election.",
            "subcommands": [
                {
                    "aliases": [
                        "open"
                    ],
                    "description": "Opens candidate registration. Done automatically when voter lists are registered.",
                    "method": "open",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "close"
                    ],
                    "description": "Closes candidate registration.",
                    "method": "close",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "register",
                        "I declare my intention to run as candidate for"
                    ],
                    "description": "Registers a candidate. Give argument of channel that you wish to run for.",
                    "method": "register",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "sponsor",
                        "I sponsor"
                    ],
                    "description": "Readies a new declaration of sponsorship in a given channel. Give single argument of the channel name.",
                    "method": "sponsor",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "usage": [
                "candidates",
                "candidates register crazyhouse littleplotkin",
                "I declare my intention to run as candidate for crazyhouse",
                "I sponsor littleplotkin"
            ],
            "module": "Election",
            "file": "candidates",
            "method": "run",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "syntax": [
                "action"
            ]
        },
        {
            "aliases": [
                "sponsor",
                "I sponsor"
            ],
            "description": "Sponsors a given candidate. Can only be used in the channel for which the election is taking place.",
            "subcommands": [],
            "usage": [
                "sponsor",
                "I sponsor Fumitoks"
            ],
            "module": "Election",
            "file": "candidates",
            "method": "getSponsor",
            "arguments": [
                "channel",
                "args",
                "argument"
            ],
            "prefix": "generic",
            "syntax": [
                "candidate"
            ]
        },
        {
            "aliases": [
                "ballots"
            ],
            "description": "Sends ballots.",
            "subcommands": [
                {
                    "aliases": [
                        "all"
                    ],
                    "description": "Sends all ballots, initiates the voting stage of the election.",
                    "method": "all",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "one"
                    ],
                    "description": "Sends one ballot to a specified user.",
                    "method": "one",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "mobile"
                    ],
                    "description": "Sends mobile ballots to a specified user. `${generic}mobile` in DMs does the same thing.",
                    "method": "mobile",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "usage": [
                "ballots one MMichael",
                "ballots mobile littleplotkin"
            ],
            "module": "Election",
            "file": "ballots",
            "method": "run",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "role": "admin",
                "args": {
                    "length": [
                        1,
                        "++"
                    ]
                }
            },
            "syntax": [
                "number"
            ]
        },
        {
            "aliases": [
                "votes"
            ],
            "description": "Collates valid votes received for an election.",
            "subcommands": [
                {
                    "aliases": [
                        "close"
                    ],
                    "description": "Closes voting on this server for all elections.",
                    "method": "close",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "open"
                    ],
                    "description": "Reopens voting on a server for all elections.",
                    "method": "open",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "count"
                    ],
                    "description": "Counts up the votes and saves the results, ready to be outputted.",
                    "method": "count",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "recount"
                    ],
                    "description": "Forcibly recounts the votes and overwrites the results, ready to be outputted.",
                    "method": "recount",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "output"
                    ],
                    "description": "Outputs the results of an election.",
                    "method": "output",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "usage": [],
            "module": "Election",
            "file": "votes",
            "method": "run",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "role": "admin",
                "args": {
                    "length": 1
                }
            },
            "syntax": [
                "action"
            ]
        },
        {
            "aliases": [
                "results"
            ],
            "description": "Outputs the results of a recent election.",
            "usage": [
                "results"
            ],
            "module": "Election",
            "file": "election",
            "method": "postResults",
            "prefix": "generic"
        },
        {
            "aliases": [
                "instantrunoff",
                "IRV"
            ],
            "description": "Display information about an Instant Run Off Election.",
            "subcommands": [
                {
                    "aliases": [
                        "mock"
                    ],
                    "description": "Generates mock data for an IRV election.",
                    "method": "mock",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "usage": [
                "IRV",
                "IRV mock"
            ],
            "module": "Election",
            "file": "electorals/irv",
            "method": "run",
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": [
                        0,
                        1
                    ]
                }
            },
            "syntax": [
                "action"
            ]
        }
    ],
    "ModMail": [
        {
            "aliases": [
                "send"
            ],
            "description": "Sends a ModMail to a specified user. Use `-s` or `--server` flag to send as anonymous.",
            "usage": [
                "send bakkouz -s",
                "send penguingim1"
            ],
            "module": "ModMail",
            "file": "input",
            "method": "outgoing",
            "arguments": [
                "args"
            ],
            "prefix": "generic"
        }
    ],
    "Help": [
        {
            "aliases": [
                "about"
            ],
            "description": "Posts the bot's current ReadME file.",
            "usage": [
                "about"
            ],
            "module": "Help",
            "file": "commands",
            "method": "about",
            "prefix": "generic"
        },
        {
            "aliases": [
                "commands",
                "cmds"
            ],
            "description": "List the stable commands availabe on the bot.",
            "usage": [
                "commands",
                "cmds"
            ],
            "module": "Help",
            "file": "commands",
            "method": "list",
            "prefix": "generic"
        },
        {
            "aliases": [
                "help",
                "h"
            ],
            "description": "Displays help info for a given command.",
            "usage": [
                "help",
                "help !lichess"
            ],
            "module": "Help",
            "file": "help",
            "method": "run",
            "arguments": [
                "args"
            ],
            "prefix": "generic"
        }
    ],
    "Profile": [
        {
            "aliases": [
                "profile"
            ],
            "description": "Generates a profile for the user summoned. Has customisable elements through the commands `${generic}finger` and `${generic}asl`. Supports linking to lichess, chess.com, and bughousetest.com accounts on second page.",
            "usage": [
                "profile",
                "profile theLAZYmd",
                "profile 338772451565502474",
                "profile littleplotkin"
            ],
            "module": "Profile",
            "file": "profile",
            "method": "get",
            "prefix": "generic"
        },
        {
            "aliases": [
                "asl"
            ],
            "description": "Sets user age, sex, and location information. Requires three arguments. Use `-` to set null. Simply write `clear` to set all to null. Information appears on `${generic}profile`.",
            "usage": [
                "asl",
                "asl 18 male Toulouse",
                "asl - female -",
                "asl clear"
            ],
            "module": "Profile",
            "file": "asl",
            "method": "run",
            "arguments": [
                "args",
                "dbuser"
            ],
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": [
                        0,
                        1,
                        3
                    ]
                }
            }
        },
        {
            "aliases": [
                "messages",
                "messagecount"
            ],
            "description": "Returns number of messages for a given user. If none provided, defaults to self.",
            "usage": [
                "messages",
                "messages littleplotkin"
            ],
            "module": "Profile",
            "file": "messagecount",
            "method": "get",
            "arguments": [
                "args",
                "user"
            ],
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": [
                        0,
                        1
                    ]
                }
            }
        },
        {
            "aliases": [
                "updatemessages",
                "umc",
                "updatemessagecount"
            ],
            "description": "Edits the number of messages for a given user. If none provided, defaults to self.",
            "usage": [
                "updatemessages 63430",
                "updatemessgecount obi 42000"
            ],
            "module": "Profile",
            "file": "messagecount",
            "method": "update",
            "prefix": "generic",
            "requires": {
                "user": "owner",
                "args": {
                    "length": [
                        1,
                        2
                    ]
                }
            }
        },
        {
            "aliases": [
                "finger"
            ],
            "description": "Sets finger message. Can be viewed through `${generic}profile` or `${generic}finger`. Use `${generic}finger clear` to clear finger message. Otherwise just type `${generic}finger [your message here]` to set your message. Feel free to advertise your favourite things. Max limit of 500 characters",
            "usage": [
                "finger",
                "finger chuckmoulton",
                "finger clear",
                "finger twitch.tv/thelazymd"
            ],
            "module": "Profile",
            "file": "finger",
            "method": "run",
            "arguments": [
                "args",
                "argument",
                "author"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "color",
                "colour"
            ],
            "description": "Sets your personal role colour to anything you want. Requires you to have bought the feature using `${nadeko}shop`. A colour is anything that fits [this criteria](https://discord.js.org/#/docs/main/stable/typedef/ColorResolvable).",
            "usage": [
                "color #36393F",
                "color 255, 26, 26",
                "color NAVY_BLUE"
            ],
            "module": "Profile",
            "file": "color",
            "method": "run",
            "arguments": [
                "member"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "trophy"
            ],
            "description": "Adds, edits, or removes a trophy for a user.",
            "usage": [
                "trophy add penguingim1"
            ],
            "module": "Profile",
            "file": "trophy",
            "method": "run",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "user": "owner"
            }
        }
    ],
    "Trivia": [
        {
            "aliases": [
                "trivia",
                "t"
            ],
            "description": "Initiates new trivia game on Bouncer; begins process of registering rating on LAZYbot. Pokemon games are invalid.",
            "usage": [
                "t",
                "t --timeout 5 -w 3 -q 10"
            ],
            "module": "Trivia",
            "file": "trivia",
            "method": "init",
            "arguments": [
                "args"
            ],
            "prefix": "nadeko",
            "requires": {
                "response": "bot"
            }
        },
        {
            "aliases": [
                "tq"
            ],
            "description": "Ends a trivia game on Bouncer.",
            "usage": [
                "tq"
            ],
            "module": "Trivia",
            "file": "trivia",
            "method": "end",
            "prefix": "nadeko",
            "requires": {
                "response": "bot"
            }
        },
        {
            "aliases": [
                "triviaplaying",
                "tplay"
            ],
            "description": "Shows a list of trivia players who are currently being rated.",
            "usage": [
                "triviaplaying"
            ],
            "module": "Trivia",
            "file": "trivia",
            "method": "show",
            "prefix": "generic",
            "requires": {
                "channels": "trivia"
            }
        },
        {
            "aliases": [
                "triviarate",
                "trate"
            ],
            "description": "Adds a user who had previously excluded themselves from the trivia rating list.",
            "usage": [
                "triviarate",
                "trate obi"
            ],
            "module": "Trivia",
            "file": "trivia",
            "method": "rate",
            "arguments": [
                "argument"
            ],
            "prefix": "generic",
            "requires": {
                "channels": "trivia"
            }
        },
        {
            "aliases": [
                "triviarating",
                "trat"
            ],
            "description": "Shows a user's trivia rating.",
            "usage": [
                "triviarating",
                "trat obi"
            ],
            "module": "Trivia",
            "file": "trivia",
            "method": "rating",
            "arguments": [
                "argument"
            ],
            "prefix": "generic"
        }
    ],
    "Utility": [
		{
			"aliases": [
				"whatis",
				"data"
			],
			"description": "Outputs data at a specified path on the 'this' tree, for debugging use",
			"module": "Utility",
			"file": "utility",
			"method": "data",
			"prefix": "generic",
			"usage": [
				"data this.server",
				"data this.member.displayColor",
				"data this.channel.name"
			],
			"requires": {
				"args": [1],
				"role": "admin"
			}
		},
		{
			"aliases": [
                "teamadd"
            ],
            "description": "Registers a new 'team' in a server",
            "usage": [
				"teamadd natso"
            ],
            "module": "Utility",
            "file": "teams",
            "method": "register",
            "prefix": "generic"
		},		
		{
			"aliases": [
                "teamrem"
            ],
            "description": "Removes a 'team' from a server",
            "usage": [
				"teamarem natso"
            ],
            "module": "Utility",
            "file": "teams",
            "method": "remove",
            "prefix": "generic"
		},
		{
			"aliases": [
                "teamlist",
                "teams"
            ],
            "description": "Lists the 'teams' in a server, based on a pre-registry",
            "usage": [
				"teams --all",
				"teams -a"
            ],
            "module": "Utility",
            "file": "teams",
            "method": "list",
            "prefix": "generic"
		},
        {
            "aliases": [
                "fetch",
                "fetchmessage"
            ],
            "description": "Fetches a message from that channel from the id. Enable developer mode, then click on message options get its id. Have second argument of channel name if desired message is not in that channel.",
            "usage": [
                "fetch 468744017912528917",
                "fetch 468727229359325184 general"
            ],
            "module": "Utility",
            "file": "utility",
            "method": "fetch",
            "arguments": [
                "message",
                "args"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "lastmessage",
                "last"
            ],
            "description": "Fetches the last message of a user. Defaults to self.",
            "usage": [
                "lastmessage",
                "last"
            ],
            "module": "Profile",
            "file": "messagecount",
            "method": "last",
            "arguments": [
                "argument"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "uptime",
                "sincebleepbloop"
            ],
            "description": "Returns the time elapsed since last bot restart. Note that host server glitch.com auto-restarts every 12 hours.",
            "usage": [
                "uptime"
            ],
            "module": "Utility",
            "file": "utility",
            "method": "uptime",
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": 0
                }
            }
        },
        {
            "aliases": [
                "testingmode",
                "tm"
            ],
            "subcommands": [
                {
                    "aliases": [
                        "true"
                    ],
                    "description": "Allows Bouncer individually to view the testing channels.",
                    "method": "true",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                },
                {
                    "aliases": [
                        "false"
                    ],
                    "description": "Blocks Bouncer individually from viewing the testing channels.",
                    "method": "false",
                    "requires": {
                        "args": {
                            "length": 0
                        }
                    }
                }
            ],
            "description": "Toggles testing mode, which disables LAZYbot and Bouncer's permissions in the #spam and #devs channels. Specify 'true false' to just apply to one or the other.",
            "usage": [
                "tm",
                "tm true false",
                "tm false true"
            ],
            "module": "Administration",
            "file": "states",
            "method": "tm",
            "arguments": [
                "args"
            ],
            "prefix": "generic",
            "requires": {
                "house": true
            },
            "syntax": [
                "Bouncer",
                "LAZYbot"
            ]
        },
        {
            "aliases": [
                "botcontingencyplan",
                "bcp"
            ],
            "description": "Switches whether Nadeko or Bouncer has 'Bot-in-Use' role (full permission for server). To be used when Bouncer is offline, triggers automatically.",
            "usage": [],
            "module": "Administration",
            "file": "states",
            "method": "bcp",
            "prefix": "generic",
            "requires": {
                "house": true
            }
        },
        {
            "aliases": [
                "notify",
                "tournamentnotify"
            ],
            "description": "Alerts the players in the chanel to a new tournament you have created. Only accessible to Bronze++ members once every hour to prevent spam.",
            "usage": [
                "notify https://lichess.org/tournament/Cr4NUyl2"
            ],
            "module": "Utility",
            "file": "notifications",
            "method": "run",
            "arguments": [
                "argument"
            ],
            "prefix": "generic"
        },
        {
            "aliases": [
                "guide",
                ".."
            ],
            "description": "Displays a guide - a multipage information about something. There are guides for each variant! Compiled by the members of our community. Use `${nadeko}.. guides` to see info on how to contribute to them.",
            "usage": [
                ".. zh",
                ".. anti",
                ".. guides",
                ".. flowers"
            ],
            "module": "Utility",
            "file": "embeds",
            "method": "post",
            "arguments": [
                "args"
            ],
            "prefix": "nadeko",
            "requires": {
                "args": {
                    "length": 1
                }
            }
        },
        {
            "aliases": [
                "..."
            ],
            "description": "Posts a guide that has pages that can switch permanently. Use `${nadeko}.. guides` to see info on how to contribute to them.",
            "usage": [
                "... cwc"
            ],
            "module": "Utility",
            "file": "embeds",
            "method": "post",
            "arguments": [
                "args"
            ],
            "prefix": "nadeko",
            "requires": {
                "args": {
                    "length": 1
                }
            }
        },
        {
            "aliases": [
                "guides"
            ],
            "description": "Lists all guides. There are guides for each variant! Compiled by the members of our community. Use `${nadeko}.. GuideName` to view each one individually. Use `${nadeko}.. guides` to see info on how to contribute to them.",
            "usage": [
                "guides"
            ],
            "module": "Utility",
            "file": "embeds",
            "method": "list",
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": [
                        0
                    ]
                }
            }
        },
        {
            "aliases": [
                "Markdownify"
            ],
            "description": "Fetches a message, but instead of outputting the same message, if the message has content, outputs the raw markdown required to produce that text. Developer's tool.",
            "usage": [
                "markdownify 390262198385246210 welcome",
                "markdownify 470270623688425472"
            ],
            "module": "Utility",
            "file": "utility",
            "method": "markdownify",
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": [
                        1,
                        2
                    ]
                }
            }
        },
        {
            "aliases": [
                "JSONify"
            ],
            "description": "Fetches a message, but instead of outputting the same message, if and only if the message has an embed, outputs the raw JSON required to produce that embed. Developer's tool.",
            "usage": [
                "JSONify 481094704864296972",
                "JSONify 470270666818584599 announcements"
            ],
            "module": "Utility",
            "file": "utility",
            "method": "jsonify",
            "prefix": "generic",
            "requires": {
                "args": {
                    "length": [
                        1,
                        2
                    ]
                }
            }
        },
        {
            "aliases": [
                "members"
            ],
            "description": "Returns the number of members in the database.",
            "usage": [],
            "module": "Utility",
            "file": "utility",
            "method": "members",
            "prefix": "generic"
        },
        {
            "aliases": [
                "ping"
            ],
            "description": "Returns the bot's ping in milliseconds.\n**Note:** this is not your ping! This is the time taken for a client-emitted event to reach the bot, not how long it takes you to send a message.",
            "usage": [],
            "module": "Utility",
            "file": "utility",
            "method": "ping",
            "prefix": "generic"
        },
        {
            "aliases": [
                "gdpr",
                "dbuser"
            ],
            "description": "Returns the data stored on a user",
            "module": "Utility",
            "file": "utility",
            "method": "gdpr",
            "prefix": "generic"
        }
    ]
}